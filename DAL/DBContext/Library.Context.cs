//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.DBContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KnjiznicaEntities : DbContext
    {
        public KnjiznicaEntities()
            : base("name=KnjiznicaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Author> Author { get; set; }
        public virtual DbSet<Book> Book { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Library> Library { get; set; }
        public virtual DbSet<LoanHistory> LoanHistory { get; set; }
        public virtual DbSet<Publisher> Publisher { get; set; }
        public virtual DbSet<PurchasedHistory> PurchasedHistory { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<UserAsp> UserAsp { get; set; }
    
        public virtual int SaveEmployee(Employee employee)
        {
            var firstNameParameter =employee.FristName  != null ?
                new ObjectParameter("FirstName", employee.FristName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = employee.LastName != null ?
                new ObjectParameter("LastName", employee.LastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var usernameParameter = employee.UserName != null ?
                new ObjectParameter("Username", employee.UserName) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = employee.Password != null ?
                new ObjectParameter("Password", employee.Password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = employee.Email != null ?
                new ObjectParameter("Email", employee.Email) :
                new ObjectParameter("Email", typeof(string));
    
            var telephoneParameter = employee.Telephone != null ?
                new ObjectParameter("Telephone", employee.Telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEmployee", firstNameParameter, lastNameParameter, usernameParameter, passwordParameter, emailParameter, telephoneParameter);
        }
    
        public virtual int HideBook(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HideBook", idParameter);
        }
    }
}
